#include <iostream>
#include <vector>
#include <cstring>
#include <cstdio>

std::vector<std::pair<std::string, std::string>> steps;
std::string start = "s";
std::string s1 = "s1";
std::string s2 = "s2";
std::string accept = "ac";
std::string reject = "rj";
std::string blank = "_";
std::string top = "^";
std::string left_step = "<";
std::string right_step = ">";
std::string zero = "0";
std::string one = "1";
std::string two = "2";
std::string three = "3";
std::string four = "4";
std::string open = "(";
std::string close = ")";
std::string push_zero = "p0";
std::string write_lp = "lp";
std::string toend_and_write_rp = "wrp";
std::string to_readval_and_start = "rs";
std::string readval = "r";
std::string push_one = "p1";
std::string a = "a";
std::string e = "e";
std::string o = "o";
std::string push_open = "po";
std::string readop = "ro";
std::string push_a_val = "pa";
std::string resolve = "resolve";
std::string push_o_val = "po";
std::string resolve_one = "re1";
std::string resolve_zero = "re0";

void next_step(std::string a1, std::string a2, std::string a3, std::string a4, std::string b1, std::string b2, std::string b3, std::string b4, std::string b5, std::string b6, std::string b7) {
    std::pair<std::string, std::string> step;
    step.first = a1 + " " + a2 + " " + a3 + " " + a4;
    step.second = b1 + " " + b2 + " " + b3 + " " + b4 + " " + b5 + " " + b6 + " " + b7;
    steps.push_back(step);
}

int main() {
    freopen("infixlogic.out", "w", stdout);
    std::cout << "3\n";

    next_step(start, blank, blank, blank, write_lp, blank, left_step, blank, top, blank, top);
    next_step(start, zero, blank, blank, write_lp, zero, left_step, blank, top, blank, top);
    next_step(start, one, blank, blank, write_lp, one, left_step, blank, top, blank, top);
    next_step(start, a, blank, blank, write_lp, a, left_step, blank, top, blank, top);
    next_step(start, o, blank, blank, write_lp, o, left_step, blank, top, blank, top);
    next_step(start, open, blank, blank, write_lp, open, left_step, blank, top, blank, top);
    next_step(start, close, blank, blank, write_lp, close, left_step, blank, top, blank, top);
    next_step(write_lp, blank, blank, blank, toend_and_write_rp, open, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, blank, blank, blank, toend_and_write_rp, blank, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, zero, blank, blank, toend_and_write_rp, zero, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, one, blank, blank, toend_and_write_rp, one, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, a, blank, blank, toend_and_write_rp, a, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, o, blank, blank, toend_and_write_rp, o, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, open, blank, blank, toend_and_write_rp, open, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, close, blank, blank, toend_and_write_rp, close, right_step, blank, top, blank, top);
    next_step(toend_and_write_rp, blank, blank, blank, to_readval_and_start, close, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, blank, blank, blank, to_readval_and_start, blank, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, zero, blank, blank, to_readval_and_start, zero, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, one, blank, blank, to_readval_and_start, one, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, a, blank, blank, to_readval_and_start, a, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, o, blank, blank, to_readval_and_start, o, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, open, blank, blank, to_readval_and_start, open, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, close, blank, blank, to_readval_and_start, close, left_step, blank, top, blank, top);
    next_step(to_readval_and_start, blank, blank, blank, readval, blank, right_step, blank, top, blank, top);
    next_step(readval, zero, blank, blank, push_zero, blank, right_step, blank, right_step, blank, top);
    next_step(readval, zero, blank, a, push_zero, blank, right_step, blank, right_step, a, top);
    next_step(readval, zero, blank, o, push_zero, blank, right_step, blank, right_step, o, top);
    next_step(readval, zero, blank, open, push_zero, blank, right_step, blank, right_step, open, top);
    next_step(readval, zero, zero, blank, push_zero, blank, right_step, zero, right_step, blank, top);
    next_step(readval, zero, zero, a, push_zero, blank, right_step, zero, right_step, a, top);
    next_step(readval, zero, zero, o, push_zero, blank, right_step, zero, right_step, o, top);
    next_step(readval, zero, zero, open, push_zero, blank, right_step, zero, right_step, open, top);
    next_step(readval, zero, one, blank, push_zero, blank, right_step, one, right_step, blank, top);
    next_step(readval, zero, one, a, push_zero, blank, right_step, one, right_step, a, top);
    next_step(readval, zero, one, o, push_zero, blank, right_step, one, right_step, o, top);
    next_step(readval, zero, one, open, push_zero, blank, right_step, one, right_step, open, top);
    next_step(readval, one, blank, blank, push_one, blank, right_step, blank, right_step, blank, top);
    next_step(readval, one, blank, a, push_one, blank, right_step, blank, right_step, a, top);
    next_step(readval, one, blank, o, push_one, blank, right_step, blank, right_step, o, top);
    next_step(readval, one, blank, open, push_one, blank, right_step, blank, right_step, open, top);
    next_step(readval, one, zero, blank, push_one, blank, right_step, zero, right_step, blank, top);
    next_step(readval, one, zero, a, push_one, blank, right_step, zero, right_step, a, top);
    next_step(readval, one, zero, o, push_one, blank, right_step, zero, right_step, o, top);
    next_step(readval, one, zero, open, push_one, blank, right_step, zero, right_step, open, top);
    next_step(readval, one, one, blank, push_one, blank, right_step, one, right_step, blank, top);
    next_step(readval, one, one, a, push_one, blank, right_step, one, right_step, a, top);
    next_step(readval, one, one, o, push_one, blank, right_step, one, right_step, o, top);
    next_step(readval, one, one, open, push_one, blank, right_step, one, right_step, open, top);
    next_step(readval, open, blank, blank, push_open, blank, right_step, blank, top, blank, right_step);
    next_step(readval, open, blank, a, push_open, blank, right_step, blank, top, a, right_step);
    next_step(readval, open, blank, o, push_open, blank, right_step, blank, top, o, right_step);
    next_step(readval, open, blank, open, push_open, blank, right_step, blank, top, open, right_step);
    next_step(readval, open, zero, blank, push_open, blank, right_step, zero, top, blank, right_step);
    next_step(readval, open, zero, a, push_open, blank, right_step, zero, top, a, right_step);
    next_step(readval, open, zero, o, push_open, blank, right_step, zero, top, o, right_step);
    next_step(readval, open, zero, open, push_open, blank, right_step, zero, top, open, right_step);
    next_step(readval, open, one, blank, push_open, blank, right_step, one, top, blank, right_step);
    next_step(readval, open, one, a, push_open, blank, right_step, one, top, a, right_step);
    next_step(readval, open, one, o, push_open, blank, right_step, one, top, o, right_step);
    next_step(readval, open, one, open, push_open, blank, right_step, one, top, open, right_step);
    next_step(readval, blank, zero, blank, accept, zero, top, blank, top, blank, top);
    next_step(readval, blank, zero, a, accept, zero, top, blank, top, blank, top);
    next_step(readval, blank, zero, o, accept, zero, top, blank, top, blank, top);
    next_step(readval, blank, zero, open, accept, zero, top, blank, top, blank, top);
    next_step(readval, blank, one, blank, accept, one, top, blank, top, blank, top);
    next_step(readval, blank, one, a, accept, one, top, blank, top, blank, top);
    next_step(readval, blank, one, o, accept, one, top, blank, top, blank, top);
    next_step(readval, blank, one, open, accept, one, top, blank, top, blank, top);
    next_step(push_zero, blank, blank, blank, readop,  blank, top, zero, top, blank, top);
    next_step(push_zero, blank, blank, a, readop,  blank, top, zero, top, a, top);
    next_step(push_zero, blank, blank, o, readop,  blank, top, zero, top, o, top);
    next_step(push_zero, blank, blank, open, readop,  blank, top, zero, top, open, top);
    next_step(push_zero, zero, blank, blank, readop,  zero, top, zero, top, blank, top);
    next_step(push_zero, zero, blank, a, readop,  zero, top, zero, top, a, top);
    next_step(push_zero, zero, blank, o, readop,  zero, top, zero, top, o, top);
    next_step(push_zero, zero, blank, open, readop,  zero, top, zero, top, open, top);
    next_step(push_zero, one, blank, blank, readop,  one, top, zero, top, blank, top);
    next_step(push_zero, one, blank, a, readop,  one, top, zero, top, a, top);
    next_step(push_zero, one, blank, o, readop,  one, top, zero, top, o, top);
    next_step(push_zero, one, blank, open, readop,  one, top, zero, top, open, top);
    next_step(push_zero, a, blank, blank, readop,  a, top, zero, top, blank, top);
    next_step(push_zero, a, blank, a, readop,  a, top, zero, top, a, top);
    next_step(push_zero, a, blank, o, readop,  a, top, zero, top, o, top);
    next_step(push_zero, a, blank, open, readop,  a, top, zero, top, open, top);
    next_step(push_zero, o, blank, blank, readop,  o, top, zero, top, blank, top);
    next_step(push_zero, o, blank, a, readop,  o, top, zero, top, a, top);
    next_step(push_zero, o, blank, o, readop,  o, top, zero, top, o, top);
    next_step(push_zero, o, blank, open, readop,  o, top, zero, top, open, top);
    next_step(push_zero, open, blank, blank, readop,  open, top, zero, top, blank, top);
    next_step(push_zero, open, blank, a, readop,  open, top, zero, top, a, top);
    next_step(push_zero, open, blank, o, readop,  open, top, zero, top, o, top);
    next_step(push_zero, open, blank, open, readop,  open, top, zero, top, open, top);
    next_step(push_zero, close, blank, blank, readop,  close, top, zero, top, blank, top);
    next_step(push_zero, close, blank, a, readop,  close, top, zero, top, a, top);
    next_step(push_zero, close, blank, o, readop,  close, top, zero, top, o, top);
    next_step(push_zero, close, blank, open, readop,  close, top, zero, top, open, top);
    next_step(push_one, blank, blank, blank, readop,  blank, top, one, top, blank, top);
    next_step(push_one, blank, blank, a, readop,  blank, top, one, top, a, top);
    next_step(push_one, blank, blank, o, readop,  blank, top, one, top, o, top);
    next_step(push_one, blank, blank, open, readop,  blank, top, one, top, open, top);
    next_step(push_one, zero, blank, blank, readop,  zero, top, one, top, blank, top);
    next_step(push_one, zero, blank, a, readop,  zero, top, one, top, a, top);
    next_step(push_one, zero, blank, o, readop,  zero, top, one, top, o, top);
    next_step(push_one, zero, blank, open, readop,  zero, top, one, top, open, top);
    next_step(push_one, one, blank, blank, readop,  one, top, one, top, blank, top);
    next_step(push_one, one, blank, a, readop,  one, top, one, top, a, top);
    next_step(push_one, one, blank, o, readop,  one, top, one, top, o, top);
    next_step(push_one, one, blank, open, readop,  one, top, one, top, open, top);
    next_step(push_one, a, blank, blank, readop,  a, top, one, top, blank, top);
    next_step(push_one, a, blank, a, readop,  a, top, one, top, a, top);
    next_step(push_one, a, blank, o, readop,  a, top, one, top, o, top);
    next_step(push_one, a, blank, open, readop,  a, top, one, top, open, top);
    next_step(push_one, o, blank, blank, readop,  o, top, one, top, blank, top);
    next_step(push_one, o, blank, a, readop,  o, top, one, top, a, top);
    next_step(push_one, o, blank, o, readop,  o, top, one, top, o, top);
    next_step(push_one, o, blank, open, readop,  o, top, one, top, open, top);
    next_step(push_one, open, blank, blank, readop,  open, top, one, top, blank, top);
    next_step(push_one, open, blank, a, readop,  open, top, one, top, a, top);
    next_step(push_one, open, blank, o, readop,  open, top, one, top, o, top);
    next_step(push_one, open, blank, open, readop,  open, top, one, top, open, top);
    next_step(push_one, close, blank, blank, readop,  close, top, one, top, blank, top);
    next_step(push_one, close, blank, a, readop,  close, top, one, top, a, top);
    next_step(push_one, close, blank, o, readop,  close, top, one, top, o, top);
    next_step(push_one, close, blank, open, readop,  close, top, one, top, open, top);
    next_step(push_open, blank, blank, blank, readval, blank, top, blank, top, open, top);
    next_step(push_open, blank, zero, blank, readval, blank, top, zero, top, open, top);
    next_step(push_open, blank, one, blank, readval, blank, top, one, top, open, top);
    next_step(push_open, zero, blank, blank, readval, zero, top, blank, top, open, top);
    next_step(push_open, zero, zero, blank, readval, zero, top, zero, top, open, top);
    next_step(push_open, zero, one, blank, readval, zero, top, one, top, open, top);
    next_step(push_open, one, blank, blank, readval, one, top, blank, top, open, top);
    next_step(push_open, one, zero, blank, readval, one, top, zero, top, open, top);
    next_step(push_open, one, one, blank, readval, one, top, one, top, open, top);
    next_step(push_open, a, blank, blank, readval, a, top, blank, top, open, top);
    next_step(push_open, a, zero, blank, readval, a, top, zero, top, open, top);
    next_step(push_open, a, one, blank, readval, a, top, one, top, open, top);
    next_step(push_open, o, blank, blank, readval, o, top, blank, top, open, top);
    next_step(push_open, o, zero, blank, readval, o, top, zero, top, open, top);
    next_step(push_open, o, one, blank, readval, o, top, one, top, open, top);
    next_step(push_open, open, blank, blank, readval, open, top, blank, top, open, top);
    next_step(push_open, open, zero, blank, readval, open, top, zero, top, open, top);
    next_step(push_open, open, one, blank, readval, open, top, one, top, open, top);
    next_step(push_open, close, blank, blank, readval, close, top, blank, top, open, top);
    next_step(push_open, close, zero, blank, readval, close, top, zero, top, open, top);
    next_step(push_open, close, one, blank, readval, close, top, one, top, open, top);
    next_step(readop, blank, blank, blank, accept, blank, top, blank, top, blank, top);
    next_step(readop, blank, blank, a, accept, blank, top, blank, top, blank, top);
    next_step(readop, blank, blank, o, accept, blank, top, blank, top, blank, top);
    next_step(readop, blank, blank, open, accept, blank, top, blank, top, blank, top);
    next_step(readop, blank, zero, blank, accept, zero, top, blank, top, blank, top);
    next_step(readop, blank, zero, a, accept, zero, top, blank, top, blank, top);
    next_step(readop, blank, zero, o, accept, zero, top, blank, top, blank, top);
    next_step(readop, blank, zero, open, accept, zero, top, blank, top, blank, top);
    next_step(readop, blank, one, blank, accept, one, top, blank, top, blank, top);
    next_step(readop, blank, one, a, accept, one, top, blank, top, blank, top);
    next_step(readop, blank, one, o, accept, one, top, blank, top, blank, top);
    next_step(readop, blank, one, open, accept, one, top, blank, top, blank, top);
    next_step(readop, a, blank, blank, readval,  blank, right_step, blank, top, a, top);
    next_step(readop, a, zero, blank, readval,  blank, right_step, zero, top, a, top);
    next_step(readop, a, one, blank, readval,  blank, right_step, one, top, a, top);
    next_step(readop, a, blank, o, push_a_val, blank, right_step, blank, top, o, right_step);
    next_step(readop, a, zero, o, push_a_val, blank, right_step, zero, top, o, right_step);
    next_step(readop, a, one, o, push_a_val, blank, right_step, one, top, o, right_step);
    next_step(readop, a, blank, open, push_a_val, blank, right_step, blank, top, open, right_step);
    next_step(readop, a, zero, open, push_a_val, blank, right_step, zero, top, open, right_step);
    next_step(readop, a, one, open, push_a_val, blank, right_step, one, top, open, right_step);
    next_step(readop, a, blank, a, resolve,  a, top, blank, top, a, top);
    next_step(readop, a, zero, a, resolve,  a, top, zero, top, a, top);
    next_step(readop, a, one, a, resolve,  a, top, one, top, a, top);
    next_step(readop, o, blank, blank, readval,  blank, right_step, blank, top, o, top);
    next_step(readop, o, zero, blank, readval,  blank, right_step, zero, top, o, top);
    next_step(readop, o, one, blank, readval,  blank, right_step, one, top, o, top);
    next_step(readop, o, blank, open, push_o_val, blank, right_step, blank, top, open, right_step);
    next_step(readop, o, zero, open, push_o_val, blank, right_step, zero, top, open, right_step);
    next_step(readop, o, one, open, push_o_val, blank, right_step, one, top, open, right_step);
    next_step(readop, o, blank, o, resolve,  o, top, blank, top, o, top);
    next_step(readop, o, zero, o, resolve,  o, top, zero, top, o, top);
    next_step(readop, o, one, o, resolve,  o, top, one, top, o, top);
    next_step(readop, o, blank, a, resolve,  o, top, blank, top, a, top);
    next_step(readop, o, zero, a, resolve,  o, top, zero, top, a, top);
    next_step(readop, o, one, a, resolve,  o, top, one, top, a, top);
    next_step(readop, close, blank, blank, resolve,  close, top, blank, top, blank, top);
    next_step(readop, close, blank, a, resolve,  close, top, blank, top, a, top);
    next_step(readop, close, blank, o, resolve,  close, top, blank, top, o, top);
    next_step(readop, close, blank, open, resolve,  close, top, blank, top, open, top);
    next_step(readop, close, zero, blank, resolve,  close, top, zero, top, blank, top);
    next_step(readop, close, zero, a, resolve,  close, top, zero, top, a, top);
    next_step(readop, close, zero, o, resolve,  close, top, zero, top, o, top);
    next_step(readop, close, zero, open, resolve,  close, top, zero, top, open, top);
    next_step(readop, close, one, blank, resolve,  close, top, one, top, blank, top);
    next_step(readop, close, one, a, resolve,  close, top, one, top, a, top);
    next_step(readop, close, one, o, resolve,  close, top, one, top, o, top);
    next_step(readop, close, one, open, resolve,  close, top, one, top, open, top);
    next_step(readop, close, blank, open, readop,   blank, right_step, blank, top, blank, left_step);
    next_step(readop, close, zero, open, readop,   blank, right_step, zero, top, blank, left_step);
    next_step(readop, close, one, open, readop,   blank, right_step, one, top, blank, left_step);
    next_step(resolve, blank, zero, blank, resolve_zero, blank, top, blank, left_step, blank, top);
    next_step(resolve, blank, zero, a, resolve_zero, blank, top, blank, left_step, a, top);
    next_step(resolve, blank, zero, o, resolve_zero, blank, top, blank, left_step, o, top);
    next_step(resolve, blank, zero, open, resolve_zero, blank, top, blank, left_step, open, top);
    next_step(resolve, zero, zero, blank, resolve_zero, zero, top, blank, left_step, blank, top);
    next_step(resolve, zero, zero, a, resolve_zero, zero, top, blank, left_step, a, top);
    next_step(resolve, zero, zero, o, resolve_zero, zero, top, blank, left_step, o, top);
    next_step(resolve, zero, zero, open, resolve_zero, zero, top, blank, left_step, open, top);
    next_step(resolve, one, zero, blank, resolve_zero, one, top, blank, left_step, blank, top);
    next_step(resolve, one, zero, a, resolve_zero, one, top, blank, left_step, a, top);
    next_step(resolve, one, zero, o, resolve_zero, one, top, blank, left_step, o, top);
    next_step(resolve, one, zero, open, resolve_zero, one, top, blank, left_step, open, top);
    next_step(resolve, a, zero, blank, resolve_zero, a, top, blank, left_step, blank, top);
    next_step(resolve, a, zero, a, resolve_zero, a, top, blank, left_step, a, top);
    next_step(resolve, a, zero, o, resolve_zero, a, top, blank, left_step, o, top);
    next_step(resolve, a, zero, open, resolve_zero, a, top, blank, left_step, open, top);
    next_step(resolve, o, zero, blank, resolve_zero, o, top, blank, left_step, blank, top);
    next_step(resolve, o, zero, a, resolve_zero, o, top, blank, left_step, a, top);
    next_step(resolve, o, zero, o, resolve_zero, o, top, blank, left_step, o, top);
    next_step(resolve, o, zero, open, resolve_zero, o, top, blank, left_step, open, top);
    next_step(resolve, open, zero, blank, resolve_zero, open, top, blank, left_step, blank, top);
    next_step(resolve, open, zero, a, resolve_zero, open, top, blank, left_step, a, top);
    next_step(resolve, open, zero, o, resolve_zero, open, top, blank, left_step, o, top);
    next_step(resolve, open, zero, open, resolve_zero, open, top, blank, left_step, open, top);
    next_step(resolve, close, zero, blank, resolve_zero, close, top, blank, left_step, blank, top);
    next_step(resolve, close, zero, a, resolve_zero, close, top, blank, left_step, a, top);
    next_step(resolve, close, zero, o, resolve_zero, close, top, blank, left_step, o, top);
    next_step(resolve, close, zero, open, resolve_zero, close, top, blank, left_step, open, top);
    next_step(resolve, blank, one, blank, resolve_one, blank, top, blank, left_step, blank, top);
    next_step(resolve, blank, one, a, resolve_one, blank, top, blank, left_step, a, top);
    next_step(resolve, blank, one, o, resolve_one, blank, top, blank, left_step, o, top);
    next_step(resolve, blank, one, open, resolve_one, blank, top, blank, left_step, open, top);
    next_step(resolve, zero, one, blank, resolve_one, zero, top, blank, left_step, blank, top);
    next_step(resolve, zero, one, a, resolve_one, zero, top, blank, left_step, a, top);
    next_step(resolve, zero, one, o, resolve_one, zero, top, blank, left_step, o, top);
    next_step(resolve, zero, one, open, resolve_one, zero, top, blank, left_step, open, top);
    next_step(resolve, one, one, blank, resolve_one, one, top, blank, left_step, blank, top);
    next_step(resolve, one, one, a, resolve_one, one, top, blank, left_step, a, top);
    next_step(resolve, one, one, o, resolve_one, one, top, blank, left_step, o, top);
    next_step(resolve, one, one, open, resolve_one, one, top, blank, left_step, open, top);
    next_step(resolve, a, one, blank, resolve_one, a, top, blank, left_step, blank, top);
    next_step(resolve, a, one, a, resolve_one, a, top, blank, left_step, a, top);
    next_step(resolve, a, one, o, resolve_one, a, top, blank, left_step, o, top);
    next_step(resolve, a, one, open, resolve_one, a, top, blank, left_step, open, top);
    next_step(resolve, o, one, blank, resolve_one, o, top, blank, left_step, blank, top);
    next_step(resolve, o, one, a, resolve_one, o, top, blank, left_step, a, top);
    next_step(resolve, o, one, o, resolve_one, o, top, blank, left_step, o, top);
    next_step(resolve, o, one, open, resolve_one, o, top, blank, left_step, open, top);
    next_step(resolve, open, one, blank, resolve_one, open, top, blank, left_step, blank, top);
    next_step(resolve, open, one, a, resolve_one, open, top, blank, left_step, a, top);
    next_step(resolve, open, one, o, resolve_one, open, top, blank, left_step, o, top);
    next_step(resolve, open, one, open, resolve_one, open, top, blank, left_step, open, top);
    next_step(resolve, close, one, blank, resolve_one, close, top, blank, left_step, blank, top);
    next_step(resolve, close, one, a, resolve_one, close, top, blank, left_step, a, top);
    next_step(resolve, close, one, o, resolve_one, close, top, blank, left_step, o, top);
    next_step(resolve, close, one, open, resolve_one, close, top, blank, left_step, open, top);
    next_step(resolve_zero, blank, zero, a, readop,  blank, top, zero, top, blank, left_step);
    next_step(resolve_zero, zero, zero, a, readop,  zero, top, zero, top, blank, left_step);
    next_step(resolve_zero, one, zero, a, readop,  one, top, zero, top, blank, left_step);
    next_step(resolve_zero, a, zero, a, readop,  a, top, zero, top, blank, left_step);
    next_step(resolve_zero, o, zero, a, readop,  o, top, zero, top, blank, left_step);
    next_step(resolve_zero, open, zero, a, readop,  open, top, zero, top, blank, left_step);
    next_step(resolve_zero, close, zero, a, readop,  close, top, zero, top, blank, left_step);
    next_step(resolve_zero, blank, one, a, readop,  blank, top, zero, top, blank, left_step);
    next_step(resolve_zero, zero, one, a, readop,  zero, top, zero, top, blank, left_step);
    next_step(resolve_zero, one, one, a, readop,  one, top, zero, top, blank, left_step);
    next_step(resolve_zero, a, one, a, readop,  a, top, zero, top, blank, left_step);
    next_step(resolve_zero, o, one, a, readop,  o, top, zero, top, blank, left_step);
    next_step(resolve_zero, open, one, a, readop,  open, top, zero, top, blank, left_step);
    next_step(resolve_zero, close, one, a, readop,  close, top, zero, top, blank, left_step);
    next_step(resolve_zero, blank, zero, o, readop,  blank, top, zero, top, blank, left_step);
    next_step(resolve_zero, zero, zero, o, readop,  zero, top, zero, top, blank, left_step);
    next_step(resolve_zero, one, zero, o, readop,  one, top, zero, top, blank, left_step);
    next_step(resolve_zero, a, zero, o, readop,  a, top, zero, top, blank, left_step);
    next_step(resolve_zero, o, zero, o, readop,  o, top, zero, top, blank, left_step);
    next_step(resolve_zero, open, zero, o, readop,  open, top, zero, top, blank, left_step);
    next_step(resolve_zero, close, zero, o, readop,  close, top, zero, top, blank, left_step);
    next_step(resolve_zero, blank, one, o, readop,  blank, top, one, top, blank, left_step);
    next_step(resolve_zero, zero, one, o, readop,  zero, top, one, top, blank, left_step);
    next_step(resolve_zero, one, one, o, readop,  one, top, one, top, blank, left_step);
    next_step(resolve_zero, a, one, o, readop,  a, top, one, top, blank, left_step);
    next_step(resolve_zero, o, one, o, readop,  o, top, one, top, blank, left_step);
    next_step(resolve_zero, open, one, o, readop,  open, top, one, top, blank, left_step);
    next_step(resolve_zero, close, one, o, readop,  close, top, one, top, blank, left_step);
    next_step(resolve_one, blank, zero, a, readop,  blank, top, zero, top, blank, left_step);
    next_step(resolve_one, zero, zero, a, readop,  zero, top, zero, top, blank, left_step);
    next_step(resolve_one, one, zero, a, readop,  one, top, zero, top, blank, left_step);
    next_step(resolve_one, a, zero, a, readop,  a, top, zero, top, blank, left_step);
    next_step(resolve_one, o, zero, a, readop,  o, top, zero, top, blank, left_step);
    next_step(resolve_one, open, zero, a, readop,  open, top, zero, top, blank, left_step);
    next_step(resolve_one, close, zero, a, readop,  close, top, zero, top, blank, left_step);
    next_step(resolve_one, blank, one, a, readop,  blank, top, one, top, blank, left_step);
    next_step(resolve_one, zero, one, a, readop,  zero, top, one, top, blank, left_step);
    next_step(resolve_one, one, one, a, readop,  one, top, one, top, blank, left_step);
    next_step(resolve_one, a, one, a, readop,  a, top, one, top, blank, left_step);
    next_step(resolve_one, o, one, a, readop,  o, top, one, top, blank, left_step);
    next_step(resolve_one, open, one, a, readop,  open, top, one, top, blank, left_step);
    next_step(resolve_one, close, one, a, readop,  close, top, one, top, blank, left_step);
    next_step(resolve_one, blank, zero, o, readop,  blank, top, one, top, blank, left_step);
    next_step(resolve_one, zero, zero, o, readop,  zero, top, one, top, blank, left_step);
    next_step(resolve_one, one, zero, o, readop,  one, top, one, top, blank, left_step);
    next_step(resolve_one, a, zero, o, readop,  a, top, one, top, blank, left_step);
    next_step(resolve_one, o, zero, o, readop,  o, top, one, top, blank, left_step);
    next_step(resolve_one, open, zero, o, readop,  open, top, one, top, blank, left_step);
    next_step(resolve_one, close, zero, o, readop,  close, top, one, top, blank, left_step);
    next_step(resolve_one, blank, one, o, readop,  blank, top, one, top, blank, left_step);
    next_step(resolve_one, zero, one, o, readop,  zero, top, one, top, blank, left_step);
    next_step(resolve_one, one, one, o, readop,  one, top, one, top, blank, left_step);
    next_step(resolve_one, a, one, o, readop,  a, top, one, top, blank, left_step);
    next_step(resolve_one, o, one, o, readop,  o, top, one, top, blank, left_step);
    next_step(resolve_one, open, one, o, readop,  open, top, one, top, blank, left_step);
    next_step(resolve_one, close, one, o, readop,  close, top, one, top, blank, left_step);
    next_step(push_a_val, blank, blank, blank, readval, blank, top, blank, top, a, top);
    next_step(push_a_val, blank, zero, blank, readval, blank, top, zero, top, a, top);
    next_step(push_a_val, blank, one, blank, readval, blank, top, one, top, a, top);
    next_step(push_a_val, zero, blank, blank, readval, zero, top, blank, top, a, top);
    next_step(push_a_val, zero, zero, blank, readval, zero, top, zero, top, a, top);
    next_step(push_a_val, zero, one, blank, readval, zero, top, one, top, a, top);
    next_step(push_a_val, one, blank, blank, readval, one, top, blank, top, a, top);
    next_step(push_a_val, one, zero, blank, readval, one, top, zero, top, a, top);
    next_step(push_a_val, one, one, blank, readval, one, top, one, top, a, top);
    next_step(push_a_val, a, blank, blank, readval, a, top, blank, top, a, top);
    next_step(push_a_val, a, zero, blank, readval, a, top, zero, top, a, top);
    next_step(push_a_val, a, one, blank, readval, a, top, one, top, a, top);
    next_step(push_a_val, o, blank, blank, readval, o, top, blank, top, a, top);
    next_step(push_a_val, o, zero, blank, readval, o, top, zero, top, a, top);
    next_step(push_a_val, o, one, blank, readval, o, top, one, top, a, top);
    next_step(push_a_val, open, blank, blank, readval, open, top, blank, top, a, top);
    next_step(push_a_val, open, zero, blank, readval, open, top, zero, top, a, top);
    next_step(push_a_val, open, one, blank, readval, open, top, one, top, a, top);
    next_step(push_a_val, close, blank, blank, readval, close, top, blank, top, a, top);
    next_step(push_a_val, close, zero, blank, readval, close, top, zero, top, a, top);
    next_step(push_a_val, close, one, blank, readval, close, top, one, top, a, top);
    next_step(push_o_val, blank, blank, blank, readval, blank, top, blank, top, o, top);
    next_step(push_o_val, blank, zero, blank, readval, blank, top, zero, top, o, top);
    next_step(push_o_val, blank, one, blank, readval, blank, top, one, top, o, top);
    next_step(push_o_val, zero, blank, blank, readval, zero, top, blank, top, o, top);
    next_step(push_o_val, zero, zero, blank, readval, zero, top, zero, top, o, top);
    next_step(push_o_val, zero, one, blank, readval, zero, top, one, top, o, top);
    next_step(push_o_val, one, blank, blank, readval, one, top, blank, top, o, top);
    next_step(push_o_val, one, zero, blank, readval, one, top, zero, top, o, top);
    next_step(push_o_val, one, one, blank, readval, one, top, one, top, o, top);
    next_step(push_o_val, a, blank, blank, readval, a, top, blank, top, o, top);
    next_step(push_o_val, a, zero, blank, readval, a, top, zero, top, o, top);
    next_step(push_o_val, a, one, blank, readval, a, top, one, top, o, top);
    next_step(push_o_val, o, blank, blank, readval, o, top, blank, top, o, top);
    next_step(push_o_val, o, zero, blank, readval, o, top, zero, top, o, top);
    next_step(push_o_val, o, one, blank, readval, o, top, one, top, o, top);
    next_step(push_o_val, open, blank, blank, readval, open, top, blank, top, o, top);
    next_step(push_o_val, open, zero, blank, readval, open, top, zero, top, o, top);
    next_step(push_o_val, open, one, blank, readval, open, top, one, top, o, top);
    next_step(push_o_val, close, blank, blank, readval, close, top, blank, top, o, top);
    next_step(push_o_val, close, zero, blank, readval, close, top, zero, top, o, top);
    next_step(push_o_val, close, one, blank, readval, close, top, one, top, o, top);

    for (int i = 0; i < steps.size(); i++) {
        std::cout << steps[i].first << " -> " << steps[i].second << std::endl;
    }

    return 0;
}